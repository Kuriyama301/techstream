services:
  # Next.js フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: techstream-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - techstream-network

  # Express バックエンド（今後実装）
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: techstream-backend
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/techstream
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=techstream
      - POSTGRES_USER=techstream
      - POSTGRES_PASSWORD=techstream_dev_password
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - postgres
      - redis
    networks:
      - techstream-network

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: techstream-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=techstream
    networks:
      - techstream-network

  # PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: techstream-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=techstream
      - POSTGRES_USER=techstream
      - POSTGRES_PASSWORD=techstream_dev_password
    networks:
      - techstream-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: techstream-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - techstream-network

volumes:
  mongodb_data:
  postgres_data:
  redis_data:

networks:
  techstream-network:
    driver: bridge
